// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _matrix_mult_HH_
#define _matrix_mult_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "aesl_mux_load_12i32P.h"
#include "matrix_mult_AXILiteS_s_axi.h"

namespace ap_rtl {

template<unsigned int C_S_AXI_AXILITES_ADDR_WIDTH = 4,
         unsigned int C_S_AXI_AXILITES_DATA_WIDTH = 32>
struct matrix_mult : public sc_module {
    // Port declarations 51
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_in< sc_lv<32> > A_0_0;
    sc_in< sc_lv<32> > A_0_1;
    sc_in< sc_lv<32> > A_0_2;
    sc_in< sc_lv<32> > A_1_0;
    sc_in< sc_lv<32> > A_1_1;
    sc_in< sc_lv<32> > A_1_2;
    sc_in< sc_lv<32> > A_2_0;
    sc_in< sc_lv<32> > A_2_1;
    sc_in< sc_lv<32> > A_2_2;
    sc_in< sc_lv<32> > A_3_0;
    sc_in< sc_lv<32> > A_3_1;
    sc_in< sc_lv<32> > A_3_2;
    sc_in< sc_lv<32> > B_0_0;
    sc_in< sc_lv<32> > B_0_1;
    sc_in< sc_lv<32> > B_0_2;
    sc_in< sc_lv<32> > B_0_3;
    sc_in< sc_lv<32> > B_1_0;
    sc_in< sc_lv<32> > B_1_1;
    sc_in< sc_lv<32> > B_1_2;
    sc_in< sc_lv<32> > B_1_3;
    sc_in< sc_lv<32> > B_2_0;
    sc_in< sc_lv<32> > B_2_1;
    sc_in< sc_lv<32> > B_2_2;
    sc_in< sc_lv<32> > B_2_3;
    sc_out< sc_lv<32> > C_Addr_A;
    sc_out< sc_logic > C_EN_A;
    sc_out< sc_lv<4> > C_WEN_A;
    sc_out< sc_lv<32> > C_Din_A;
    sc_in< sc_lv<32> > C_Dout_A;
    sc_out< sc_logic > C_Clk_A;
    sc_out< sc_logic > C_Rst_A;
    sc_in< sc_logic > s_axi_AXILiteS_AWVALID;
    sc_out< sc_logic > s_axi_AXILiteS_AWREADY;
    sc_in< sc_uint<C_S_AXI_AXILITES_ADDR_WIDTH> > s_axi_AXILiteS_AWADDR;
    sc_in< sc_logic > s_axi_AXILiteS_WVALID;
    sc_out< sc_logic > s_axi_AXILiteS_WREADY;
    sc_in< sc_uint<C_S_AXI_AXILITES_DATA_WIDTH> > s_axi_AXILiteS_WDATA;
    sc_in< sc_uint<C_S_AXI_AXILITES_DATA_WIDTH/8> > s_axi_AXILiteS_WSTRB;
    sc_in< sc_logic > s_axi_AXILiteS_ARVALID;
    sc_out< sc_logic > s_axi_AXILiteS_ARREADY;
    sc_in< sc_uint<C_S_AXI_AXILITES_ADDR_WIDTH> > s_axi_AXILiteS_ARADDR;
    sc_out< sc_logic > s_axi_AXILiteS_RVALID;
    sc_in< sc_logic > s_axi_AXILiteS_RREADY;
    sc_out< sc_uint<C_S_AXI_AXILITES_DATA_WIDTH> > s_axi_AXILiteS_RDATA;
    sc_out< sc_lv<2> > s_axi_AXILiteS_RRESP;
    sc_out< sc_logic > s_axi_AXILiteS_BVALID;
    sc_in< sc_logic > s_axi_AXILiteS_BREADY;
    sc_out< sc_lv<2> > s_axi_AXILiteS_BRESP;
    sc_out< sc_logic > interrupt;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    matrix_mult(sc_module_name name);
    SC_HAS_PROCESS(matrix_mult);

    ~matrix_mult();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    matrix_mult_AXILiteS_s_axi<C_S_AXI_AXILITES_ADDR_WIDTH,C_S_AXI_AXILITES_DATA_WIDTH>* matrix_mult_AXILiteS_s_axi_U;
    aesl_mux_load_12i32P* tmp_aesl_mux_load_12i32P_fu_149;
    aesl_mux_load_12i32P* tmp_1_aesl_mux_load_12i32P_fu_178;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_logic > ap_start;
    sc_signal< sc_logic > ap_done;
    sc_signal< sc_logic > ap_idle;
    sc_signal< sc_lv<4> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > ap_ready;
    sc_signal< sc_lv<3> > i_fu_213_p2;
    sc_signal< sc_lv<3> > i_reg_328;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<6> > zext_ln19_1_fu_227_p1;
    sc_signal< sc_lv<6> > zext_ln19_1_reg_333;
    sc_signal< sc_lv<1> > icmp_ln15_fu_207_p2;
    sc_signal< sc_lv<4> > sub_ln19_fu_247_p2;
    sc_signal< sc_lv<4> > sub_ln19_reg_338;
    sc_signal< sc_lv<3> > j_fu_259_p2;
    sc_signal< sc_lv<3> > j_reg_346;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<4> > C_addr_reg_351;
    sc_signal< sc_lv<1> > icmp_ln16_fu_253_p2;
    sc_signal< sc_lv<2> > trunc_ln19_1_fu_279_p1;
    sc_signal< sc_lv<2> > trunc_ln19_1_reg_356;
    sc_signal< sc_lv<2> > k_fu_289_p2;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<32> > sum_fu_319_p2;
    sc_signal< sc_lv<1> > icmp_ln18_fu_283_p2;
    sc_signal< sc_logic > tmp_aesl_mux_load_12i32P_fu_149_ap_ready;
    sc_signal< sc_lv<4> > tmp_aesl_mux_load_12i32P_fu_149_empty;
    sc_signal< sc_lv<32> > tmp_aesl_mux_load_12i32P_fu_149_ap_return;
    sc_signal< sc_logic > tmp_1_aesl_mux_load_12i32P_fu_178_ap_ready;
    sc_signal< sc_lv<4> > tmp_1_aesl_mux_load_12i32P_fu_178_empty;
    sc_signal< sc_lv<32> > tmp_1_aesl_mux_load_12i32P_fu_178_ap_return;
    sc_signal< sc_lv<3> > i_0_reg_104;
    sc_signal< sc_lv<3> > j_0_reg_115;
    sc_signal< sc_lv<32> > sum_0_reg_126;
    sc_signal< sc_lv<2> > k_0_reg_138;
    sc_signal< sc_lv<64> > zext_ln21_1_fu_274_p1;
    sc_signal< sc_lv<32> > C_Addr_A_orig;
    sc_signal< sc_lv<5> > tmp_2_fu_219_p3;
    sc_signal< sc_lv<2> > trunc_ln19_fu_231_p1;
    sc_signal< sc_lv<4> > shl_ln_fu_239_p3;
    sc_signal< sc_lv<4> > zext_ln19_fu_235_p1;
    sc_signal< sc_lv<6> > zext_ln21_fu_265_p1;
    sc_signal< sc_lv<6> > add_ln21_fu_269_p2;
    sc_signal< sc_lv<4> > zext_ln19_2_fu_295_p1;
    sc_signal< sc_lv<32> > mul_ln19_fu_313_p0;
    sc_signal< sc_lv<32> > mul_ln19_fu_313_p1;
    sc_signal< sc_lv<32> > mul_ln19_fu_313_p2;
    sc_signal< sc_lv<4> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<4> ap_ST_fsm_state1;
    static const sc_lv<4> ap_ST_fsm_state2;
    static const sc_lv<4> ap_ST_fsm_state3;
    static const sc_lv<4> ap_ST_fsm_state4;
    static const sc_lv<32> ap_const_lv32_0;
    static const int C_S_AXI_DATA_WIDTH;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<4> ap_const_lv4_F;
    static const sc_lv<3> ap_const_lv3_4;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<2> ap_const_lv2_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_C_Addr_A();
    void thread_C_Addr_A_orig();
    void thread_C_Clk_A();
    void thread_C_Din_A();
    void thread_C_EN_A();
    void thread_C_Rst_A();
    void thread_C_WEN_A();
    void thread_add_ln21_fu_269_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_rst_n_inv();
    void thread_i_fu_213_p2();
    void thread_icmp_ln15_fu_207_p2();
    void thread_icmp_ln16_fu_253_p2();
    void thread_icmp_ln18_fu_283_p2();
    void thread_j_fu_259_p2();
    void thread_k_fu_289_p2();
    void thread_mul_ln19_fu_313_p0();
    void thread_mul_ln19_fu_313_p1();
    void thread_mul_ln19_fu_313_p2();
    void thread_shl_ln_fu_239_p3();
    void thread_sub_ln19_fu_247_p2();
    void thread_sum_fu_319_p2();
    void thread_tmp_1_aesl_mux_load_12i32P_fu_178_empty();
    void thread_tmp_2_fu_219_p3();
    void thread_tmp_aesl_mux_load_12i32P_fu_149_empty();
    void thread_trunc_ln19_1_fu_279_p1();
    void thread_trunc_ln19_fu_231_p1();
    void thread_zext_ln19_1_fu_227_p1();
    void thread_zext_ln19_2_fu_295_p1();
    void thread_zext_ln19_fu_235_p1();
    void thread_zext_ln21_1_fu_274_p1();
    void thread_zext_ln21_fu_265_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
