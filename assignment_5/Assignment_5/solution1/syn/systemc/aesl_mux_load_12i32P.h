// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _aesl_mux_load_12i32P_HH_
#define _aesl_mux_load_12i32P_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct aesl_mux_load_12i32P : public sc_module {
    // Port declarations 15
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<32> > empty_2;
    sc_in< sc_lv<32> > empty_3;
    sc_in< sc_lv<32> > empty_4;
    sc_in< sc_lv<32> > empty_5;
    sc_in< sc_lv<32> > empty_6;
    sc_in< sc_lv<32> > empty_7;
    sc_in< sc_lv<32> > empty_8;
    sc_in< sc_lv<32> > empty_9;
    sc_in< sc_lv<32> > empty_10;
    sc_in< sc_lv<32> > empty_11;
    sc_in< sc_lv<32> > empty_12;
    sc_in< sc_lv<32> > empty_13;
    sc_in< sc_lv<4> > empty;
    sc_out< sc_lv<32> > ap_return;


    // Module declarations
    aesl_mux_load_12i32P(sc_module_name name);
    SC_HAS_PROCESS(aesl_mux_load_12i32P);

    ~aesl_mux_load_12i32P();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<32> > ap_phi_mux_UnifiedRetVal_phi_fu_141_p24;
    sc_signal< sc_lv<4> > tmp_read_fu_60_p2;
    static const sc_logic ap_const_logic_1;
    static const bool ap_const_boolean_1;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<4> ap_const_lv4_2;
    static const sc_lv<4> ap_const_lv4_3;
    static const sc_lv<4> ap_const_lv4_4;
    static const sc_lv<4> ap_const_lv4_5;
    static const sc_lv<4> ap_const_lv4_6;
    static const sc_lv<4> ap_const_lv4_7;
    static const sc_lv<4> ap_const_lv4_8;
    static const sc_lv<4> ap_const_lv4_9;
    static const sc_lv<4> ap_const_lv4_A;
    static const sc_lv<4> ap_const_lv4_F;
    static const sc_lv<4> ap_const_lv4_E;
    static const sc_lv<4> ap_const_lv4_D;
    static const sc_lv<4> ap_const_lv4_C;
    static const sc_lv<4> ap_const_lv4_B;
    static const sc_logic ap_const_logic_0;
    // Thread declarations
    void thread_ap_phi_mux_UnifiedRetVal_phi_fu_141_p24();
    void thread_ap_ready();
    void thread_ap_return();
    void thread_tmp_read_fu_60_p2();
};

}

using namespace ap_rtl;

#endif
