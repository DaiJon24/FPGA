// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module aesl_mux_load_12i32P (
        ap_ready,
        empty_2,
        empty_3,
        empty_4,
        empty_5,
        empty_6,
        empty_7,
        empty_8,
        empty_9,
        empty_10,
        empty_11,
        empty_12,
        empty_13,
        empty,
        ap_return
);


output   ap_ready;
input  [31:0] empty_2;
input  [31:0] empty_3;
input  [31:0] empty_4;
input  [31:0] empty_5;
input  [31:0] empty_6;
input  [31:0] empty_7;
input  [31:0] empty_8;
input  [31:0] empty_9;
input  [31:0] empty_10;
input  [31:0] empty_11;
input  [31:0] empty_12;
input  [31:0] empty_13;
input  [3:0] empty;
output  [31:0] ap_return;

reg   [31:0] ap_phi_mux_UnifiedRetVal_phi_fu_141_p24;
wire   [3:0] tmp_read_fu_60_p2;

always @ (*) begin
    if (((tmp_read_fu_60_p2 == 4'd11) | ((tmp_read_fu_60_p2 == 4'd12) | ((tmp_read_fu_60_p2 == 4'd13) | ((tmp_read_fu_60_p2 == 4'd14) | (tmp_read_fu_60_p2 == 4'd15)))))) begin
        ap_phi_mux_UnifiedRetVal_phi_fu_141_p24 = empty_13;
    end else if ((tmp_read_fu_60_p2 == 4'd10)) begin
        ap_phi_mux_UnifiedRetVal_phi_fu_141_p24 = empty_12;
    end else if ((tmp_read_fu_60_p2 == 4'd9)) begin
        ap_phi_mux_UnifiedRetVal_phi_fu_141_p24 = empty_11;
    end else if ((tmp_read_fu_60_p2 == 4'd8)) begin
        ap_phi_mux_UnifiedRetVal_phi_fu_141_p24 = empty_10;
    end else if ((tmp_read_fu_60_p2 == 4'd7)) begin
        ap_phi_mux_UnifiedRetVal_phi_fu_141_p24 = empty_9;
    end else if ((tmp_read_fu_60_p2 == 4'd6)) begin
        ap_phi_mux_UnifiedRetVal_phi_fu_141_p24 = empty_8;
    end else if ((tmp_read_fu_60_p2 == 4'd5)) begin
        ap_phi_mux_UnifiedRetVal_phi_fu_141_p24 = empty_7;
    end else if ((tmp_read_fu_60_p2 == 4'd4)) begin
        ap_phi_mux_UnifiedRetVal_phi_fu_141_p24 = empty_6;
    end else if ((tmp_read_fu_60_p2 == 4'd3)) begin
        ap_phi_mux_UnifiedRetVal_phi_fu_141_p24 = empty_5;
    end else if ((tmp_read_fu_60_p2 == 4'd2)) begin
        ap_phi_mux_UnifiedRetVal_phi_fu_141_p24 = empty_4;
    end else if ((tmp_read_fu_60_p2 == 4'd1)) begin
        ap_phi_mux_UnifiedRetVal_phi_fu_141_p24 = empty_3;
    end else if ((tmp_read_fu_60_p2 == 4'd0)) begin
        ap_phi_mux_UnifiedRetVal_phi_fu_141_p24 = empty_2;
    end else begin
        ap_phi_mux_UnifiedRetVal_phi_fu_141_p24 = 'bx;
    end
end

assign ap_ready = 1'b1;

assign ap_return = ap_phi_mux_UnifiedRetVal_phi_fu_141_p24;

assign tmp_read_fu_60_p2 = empty;

endmodule //aesl_mux_load_12i32P
