

================================================================
== Vivado HLS Report for 'foo'
================================================================
* Date:           Mon Apr 28 14:45:15 2025

* Version:        2020.1 (Build 2897737 on Wed May 27 20:21:37 MDT 2020)
* Project:        assignment_foo
* Solution:       solution1
* Product family: virtexuplus
* Target device:  xcvu9p-flga2104-1-i


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  | 10.00 ns | 6.502 ns |   1.25 ns  |
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+-----------+-----+-----+---------+
    |  Latency (cycles) |   Latency (absolute)  |  Interval | Pipeline|
    |   min   |   max   |    min    |    max    | min | max |   Type  |
    +---------+---------+-----------+-----------+-----+-----+---------+
    |        9|        9| 90.000 ns | 90.000 ns |    9|    9|   none  |
    +---------+---------+-----------+-----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+---------+---------+----------+-----------+-----------+------+----------+
        |          |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name|   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+---------+---------+----------+-----------+-----------+------+----------+
        |- Loop 1  |        8|        8|         2|          -|          -|     4|    no    |
        +----------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 3
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 2 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.87>
ST_1 : Operation 4 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([4 x i32]* %in_r) nounwind, !map !7"   --->   Operation 4 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8 %a) nounwind, !map !13"   --->   Operation 5 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8 %b) nounwind, !map !19"   --->   Operation 6 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8 %c) nounwind, !map !23"   --->   Operation 7 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([4 x i32]* %out_r) nounwind, !map !27"   --->   Operation 8 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([4 x i8]* @foo_str) nounwind"   --->   Operation 9 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%c_read = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %c) nounwind" [foo.cpp:1]   --->   Operation 10 'read' 'c_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%b_read = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %b) nounwind" [foo.cpp:1]   --->   Operation 11 'read' 'b_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%a_read = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %a) nounwind" [foo.cpp:1]   --->   Operation 12 'read' 'a_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%sext_ln5 = sext i8 %a_read to i32" [foo.cpp:5]   --->   Operation 13 'sext' 'sext_ln5' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%sext_ln5_1 = sext i8 %b_read to i9" [foo.cpp:5]   --->   Operation 14 'sext' 'sext_ln5_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%sext_ln3 = sext i8 %c_read to i9" [foo.cpp:3]   --->   Operation 15 'sext' 'sext_ln3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.87ns)   --->   "%add_ln5 = add i9 %sext_ln5_1, %sext_ln3" [foo.cpp:5]   --->   Operation 16 'add' 'add_ln5' <Predicate = true> <Delay = 0.87> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%sext_ln5_2 = sext i9 %add_ln5 to i32" [foo.cpp:5]   --->   Operation 17 'sext' 'sext_ln5_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.73ns)   --->   "br label %1" [foo.cpp:3]   --->   Operation 18 'br' <Predicate = true> <Delay = 0.73>

State 2 <SV = 1> <Delay = 0.73>
ST_2 : Operation 19 [1/1] (0.00ns)   --->   "%i_0 = phi i3 [ 0, %0 ], [ %i, %2 ]"   --->   Operation 19 'phi' 'i_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 20 [1/1] (0.56ns)   --->   "%icmp_ln3 = icmp eq i3 %i_0, -4" [foo.cpp:3]   --->   Operation 20 'icmp' 'icmp_ln3' <Predicate = true> <Delay = 0.56> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.56> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 21 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 4, i64 4, i64 4) nounwind"   --->   Operation 21 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 22 [1/1] (0.71ns)   --->   "%i = add i3 %i_0, 1" [foo.cpp:3]   --->   Operation 22 'add' 'i' <Predicate = true> <Delay = 0.71> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 23 [1/1] (0.00ns)   --->   "br i1 %icmp_ln3, label %3, label %2" [foo.cpp:3]   --->   Operation 23 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 24 [1/1] (0.00ns)   --->   "%zext_ln4 = zext i3 %i_0 to i64" [foo.cpp:4]   --->   Operation 24 'zext' 'zext_ln4' <Predicate = (!icmp_ln3)> <Delay = 0.00>
ST_2 : Operation 25 [1/1] (0.00ns)   --->   "%in_addr = getelementptr [4 x i32]* %in_r, i64 0, i64 %zext_ln4" [foo.cpp:4]   --->   Operation 25 'getelementptr' 'in_addr' <Predicate = (!icmp_ln3)> <Delay = 0.00>
ST_2 : Operation 26 [2/2] (0.73ns)   --->   "%x = load i32* %in_addr, align 4" [foo.cpp:4]   --->   Operation 26 'load' 'x' <Predicate = (!icmp_ln3)> <Delay = 0.73> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4> <RAM>
ST_2 : Operation 27 [1/1] (0.00ns)   --->   "ret void" [foo.cpp:8]   --->   Operation 27 'ret' <Predicate = (icmp_ln3)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 6.50>
ST_3 : Operation 28 [1/2] (0.73ns)   --->   "%x = load i32* %in_addr, align 4" [foo.cpp:4]   --->   Operation 28 'load' 'x' <Predicate = true> <Delay = 0.73> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4> <RAM>
ST_3 : Operation 29 [1/1] (3.90ns)   --->   "%mul_ln5 = mul nsw i32 %x, %sext_ln5" [foo.cpp:5]   --->   Operation 29 'mul' 'mul_ln5' <Predicate = true> <Delay = 3.90> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 3.90> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 30 [1/1] (1.14ns)   --->   "%y = add i32 %sext_ln5_2, %mul_ln5" [foo.cpp:5]   --->   Operation 30 'add' 'y' <Predicate = true> <Delay = 1.14> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 31 [1/1] (0.00ns)   --->   "%out_addr = getelementptr [4 x i32]* %out_r, i64 0, i64 %zext_ln4" [foo.cpp:6]   --->   Operation 31 'getelementptr' 'out_addr' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 32 [1/1] (0.73ns)   --->   "store i32 %y, i32* %out_addr, align 4" [foo.cpp:6]   --->   Operation 32 'store' <Predicate = true> <Delay = 0.73> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4> <RAM>
ST_3 : Operation 33 [1/1] (0.00ns)   --->   "br label %1" [foo.cpp:3]   --->   Operation 33 'br' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 0.871ns
The critical path consists of the following:
	wire read on port 'c' (foo.cpp:1) [12]  (0 ns)
	'add' operation ('add_ln5', foo.cpp:5) [18]  (0.871 ns)

 <State 2>: 0.73ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', foo.cpp:3) [22]  (0 ns)
	'getelementptr' operation ('in_addr', foo.cpp:4) [29]  (0 ns)
	'load' operation ('x', foo.cpp:4) on array 'in_r' [30]  (0.73 ns)

 <State 3>: 6.5ns
The critical path consists of the following:
	'load' operation ('x', foo.cpp:4) on array 'in_r' [30]  (0.73 ns)
	'mul' operation ('mul_ln5', foo.cpp:5) [31]  (3.9 ns)
	'add' operation ('y', foo.cpp:5) [32]  (1.14 ns)
	'store' operation ('store_ln6', foo.cpp:6) of variable 'y', foo.cpp:5 on array 'out_r' [34]  (0.73 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
