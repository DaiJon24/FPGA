// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _assignment_4_cpp_HH_
#define _assignment_4_cpp_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "assignment_4_cpp_bkb.h"
#include "assignment_4_cpp_cud.h"

namespace ap_rtl {

struct assignment_4_cpp : public sc_module {
    // Port declarations 32
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<4> > array_a_cpp_address0;
    sc_out< sc_logic > array_a_cpp_ce0;
    sc_in< sc_lv<64> > array_a_cpp_q0;
    sc_out< sc_lv<4> > array_b_cpp_address0;
    sc_out< sc_logic > array_b_cpp_ce0;
    sc_in< sc_lv<64> > array_b_cpp_q0;
    sc_out< sc_lv<4> > add1_address0;
    sc_out< sc_logic > add1_ce0;
    sc_out< sc_logic > add1_we0;
    sc_out< sc_lv<64> > add1_d0;
    sc_out< sc_lv<4> > sub1_address0;
    sc_out< sc_logic > sub1_ce0;
    sc_out< sc_logic > sub1_we0;
    sc_out< sc_lv<64> > sub1_d0;
    sc_out< sc_lv<4> > mul1_address0;
    sc_out< sc_logic > mul1_ce0;
    sc_out< sc_logic > mul1_we0;
    sc_out< sc_lv<64> > mul1_d0;
    sc_out< sc_lv<4> > div1_address0;
    sc_out< sc_logic > div1_ce0;
    sc_out< sc_logic > div1_we0;
    sc_out< sc_lv<64> > div1_d0;
    sc_out< sc_lv<4> > mod1_address0;
    sc_out< sc_logic > mod1_ce0;
    sc_out< sc_logic > mod1_we0;
    sc_out< sc_lv<64> > mod1_d0;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    assignment_4_cpp(sc_module_name name);
    SC_HAS_PROCESS(assignment_4_cpp);

    ~assignment_4_cpp();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    assignment_4_cpp_bkb<1,68,64,64,64>* assignment_4_cpp_bkb_U1;
    assignment_4_cpp_cud<1,68,64,64,64>* assignment_4_cpp_cud_U2;
    sc_signal< sc_lv<70> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<4> > i_fu_140_p2;
    sc_signal< sc_lv<4> > i_reg_190;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<64> > zext_ln11_fu_146_p1;
    sc_signal< sc_lv<64> > zext_ln11_reg_195;
    sc_signal< sc_lv<1> > icmp_ln9_fu_134_p2;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<4> > i_0_reg_123;
    sc_signal< sc_logic > ap_CS_fsm_state70;
    sc_signal< sc_lv<64> > grp_fu_173_p2;
    sc_signal< sc_lv<64> > grp_fu_180_p2;
    sc_signal< sc_lv<64> > add_ln11_fu_152_p0;
    sc_signal< sc_lv<64> > add_ln11_fu_152_p1;
    sc_signal< sc_lv<64> > sub_ln12_fu_159_p0;
    sc_signal< sc_lv<64> > sub_ln12_fu_159_p1;
    sc_signal< sc_lv<64> > mul_ln13_fu_166_p0;
    sc_signal< sc_lv<64> > mul_ln13_fu_166_p1;
    sc_signal< sc_logic > grp_fu_173_ap_start;
    sc_signal< sc_logic > grp_fu_173_ap_done;
    sc_signal< sc_logic > grp_fu_180_ap_start;
    sc_signal< sc_logic > grp_fu_180_ap_done;
    sc_signal< sc_lv<70> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<70> ap_ST_fsm_state1;
    static const sc_lv<70> ap_ST_fsm_state2;
    static const sc_lv<70> ap_ST_fsm_state3;
    static const sc_lv<70> ap_ST_fsm_state4;
    static const sc_lv<70> ap_ST_fsm_state5;
    static const sc_lv<70> ap_ST_fsm_state6;
    static const sc_lv<70> ap_ST_fsm_state7;
    static const sc_lv<70> ap_ST_fsm_state8;
    static const sc_lv<70> ap_ST_fsm_state9;
    static const sc_lv<70> ap_ST_fsm_state10;
    static const sc_lv<70> ap_ST_fsm_state11;
    static const sc_lv<70> ap_ST_fsm_state12;
    static const sc_lv<70> ap_ST_fsm_state13;
    static const sc_lv<70> ap_ST_fsm_state14;
    static const sc_lv<70> ap_ST_fsm_state15;
    static const sc_lv<70> ap_ST_fsm_state16;
    static const sc_lv<70> ap_ST_fsm_state17;
    static const sc_lv<70> ap_ST_fsm_state18;
    static const sc_lv<70> ap_ST_fsm_state19;
    static const sc_lv<70> ap_ST_fsm_state20;
    static const sc_lv<70> ap_ST_fsm_state21;
    static const sc_lv<70> ap_ST_fsm_state22;
    static const sc_lv<70> ap_ST_fsm_state23;
    static const sc_lv<70> ap_ST_fsm_state24;
    static const sc_lv<70> ap_ST_fsm_state25;
    static const sc_lv<70> ap_ST_fsm_state26;
    static const sc_lv<70> ap_ST_fsm_state27;
    static const sc_lv<70> ap_ST_fsm_state28;
    static const sc_lv<70> ap_ST_fsm_state29;
    static const sc_lv<70> ap_ST_fsm_state30;
    static const sc_lv<70> ap_ST_fsm_state31;
    static const sc_lv<70> ap_ST_fsm_state32;
    static const sc_lv<70> ap_ST_fsm_state33;
    static const sc_lv<70> ap_ST_fsm_state34;
    static const sc_lv<70> ap_ST_fsm_state35;
    static const sc_lv<70> ap_ST_fsm_state36;
    static const sc_lv<70> ap_ST_fsm_state37;
    static const sc_lv<70> ap_ST_fsm_state38;
    static const sc_lv<70> ap_ST_fsm_state39;
    static const sc_lv<70> ap_ST_fsm_state40;
    static const sc_lv<70> ap_ST_fsm_state41;
    static const sc_lv<70> ap_ST_fsm_state42;
    static const sc_lv<70> ap_ST_fsm_state43;
    static const sc_lv<70> ap_ST_fsm_state44;
    static const sc_lv<70> ap_ST_fsm_state45;
    static const sc_lv<70> ap_ST_fsm_state46;
    static const sc_lv<70> ap_ST_fsm_state47;
    static const sc_lv<70> ap_ST_fsm_state48;
    static const sc_lv<70> ap_ST_fsm_state49;
    static const sc_lv<70> ap_ST_fsm_state50;
    static const sc_lv<70> ap_ST_fsm_state51;
    static const sc_lv<70> ap_ST_fsm_state52;
    static const sc_lv<70> ap_ST_fsm_state53;
    static const sc_lv<70> ap_ST_fsm_state54;
    static const sc_lv<70> ap_ST_fsm_state55;
    static const sc_lv<70> ap_ST_fsm_state56;
    static const sc_lv<70> ap_ST_fsm_state57;
    static const sc_lv<70> ap_ST_fsm_state58;
    static const sc_lv<70> ap_ST_fsm_state59;
    static const sc_lv<70> ap_ST_fsm_state60;
    static const sc_lv<70> ap_ST_fsm_state61;
    static const sc_lv<70> ap_ST_fsm_state62;
    static const sc_lv<70> ap_ST_fsm_state63;
    static const sc_lv<70> ap_ST_fsm_state64;
    static const sc_lv<70> ap_ST_fsm_state65;
    static const sc_lv<70> ap_ST_fsm_state66;
    static const sc_lv<70> ap_ST_fsm_state67;
    static const sc_lv<70> ap_ST_fsm_state68;
    static const sc_lv<70> ap_ST_fsm_state69;
    static const sc_lv<70> ap_ST_fsm_state70;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<32> ap_const_lv32_45;
    static const sc_lv<4> ap_const_lv4_C;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<1> ap_const_lv1_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_add1_address0();
    void thread_add1_ce0();
    void thread_add1_d0();
    void thread_add1_we0();
    void thread_add_ln11_fu_152_p0();
    void thread_add_ln11_fu_152_p1();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state70();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_array_a_cpp_address0();
    void thread_array_a_cpp_ce0();
    void thread_array_b_cpp_address0();
    void thread_array_b_cpp_ce0();
    void thread_div1_address0();
    void thread_div1_ce0();
    void thread_div1_d0();
    void thread_div1_we0();
    void thread_grp_fu_173_ap_start();
    void thread_grp_fu_180_ap_start();
    void thread_i_fu_140_p2();
    void thread_icmp_ln9_fu_134_p2();
    void thread_mod1_address0();
    void thread_mod1_ce0();
    void thread_mod1_d0();
    void thread_mod1_we0();
    void thread_mul1_address0();
    void thread_mul1_ce0();
    void thread_mul1_d0();
    void thread_mul1_we0();
    void thread_mul_ln13_fu_166_p0();
    void thread_mul_ln13_fu_166_p1();
    void thread_sub1_address0();
    void thread_sub1_ce0();
    void thread_sub1_d0();
    void thread_sub1_we0();
    void thread_sub_ln12_fu_159_p0();
    void thread_sub_ln12_fu_159_p1();
    void thread_zext_ln11_fu_146_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
